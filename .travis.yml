# Generic Stdr Simulator Travis Continuous Integration Configuration File
# Author: Chris Zalidis
language: python
python:
  - "2.7"
notifications:
  email:
    recipients:
      - dan@lazewatsky.com
    on_success: change #[always|never|change] # default: change
    on_failure: change #[always|never|change] # default: always
before_install: # Use this to prepare the system to install prerequisites or dependencies
  # Define some config vars
  - export ROS_DISTRO=hydro
  - export CI_SOURCE_PATH=$(pwd)
  - export REPOSITORY_NAME=${PWD##*/}
  - echo "Testing branch $TRAVIS_BRANCH of $REPOSITORY_NAME"
  - sudo sh -c 'echo "deb http://packages.ros.org/ros/ubuntu precise main" > /etc/apt/sources.list.d/ros-latest.list'
  - wget http://packages.ros.org/ros.key -O - | sudo apt-key add -
  - sudo apt-get update -qq
  - sudo apt-get install -qq -y python-rosdep python-wstool ros-$ROS_DISTRO-catkin ros-$ROS_DISTRO-ros 
  - sudo pip install catkin_pkg
  # Setup rosdep
  - sudo rosdep init
  - rosdep update
install: # Use this to install any prerequisites or dependencies necessary to run your build
  # Create workspace
  # - mkdir -p ~/ros/ws_stdr/src
  - source /opt/ros/$ROS_DISTRO/setup.bash
  - mkdir -p ~/catkin_ws/src
  - cd ~/catkin_ws/src
  - catkin_init_workspace
  - wstool init
  # - cd ..
  # - catkin_make
  # Download non-debian stuff
  # - wstool merge https://raw.github.com/stdr-simulator-ros-pkg/stdr_docs/master/stdr_simulator.rosinstall
  # - cd src
  - echo y | wstool set travis_test --git https://github.com/$TRAVIS_REPO_SLUG.git -v $TRAVIS_BRANCH
  - wstool update
  - rosdep install --from-paths . --ignore-src --rosdistro $ROS_DISTRO -y
  # Delete the stdr_simulator.rosinstall version of this repo and use the one of the branch we are testing
  - rm -rf $REPOSITORY_NAME
  - ln -s $CI_SOURCE_PATH . # Link the repo we are testing to the new workspace
  - cd ../
  # Install dependencies for source repos
  # - rosdep install --from-paths src --ignore-src --rosdistro $ROS_DISTRO -y
before_script: # Use this to prepare your build for testing e.g. copy database configurations, environment variables, etc.
  # - source ~/catkin_ws/devel/setup.bash  
  - source /opt/ros/$ROS_DISTRO/setup.bash
  - export
  - python -c "import sys, pprint; pprint.pprint(sys.path)"
script: # All commands must exit with code 0 on success. Anything else is considered failure.
  - catkin_make -j2
